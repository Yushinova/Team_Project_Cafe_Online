Клиент (Сандей и Николай)

1-При первой загрузке приложения запрос на получение информации (set Admin_Cafe_bll admin)
получаем от сервера admin и устанавливаем логотип, название кафе, телефон и адрес, если нужен

2- Получение всех блюд кафе (set List<Dish_bll> all_dishes or menu_cafe) получаем все блюда
для расположения их на главной странице

3-Для того чтобы клиент мог сделать заказ, он должен пройти регистрацию/авторизацию(Николай)
3.1-Запрос на регистрацию Клиент формирует User_bll user и отправляет запрос содержащий в себе user
получает от сервера user обратно с установленным Id в базе данных в случае успеха,
если не удалось зарегистрироваться получаем ответ,что регистрация не пройдена(плохой код)
3.2-Запрос на авторизацию. Отправляем только логин(Phone) и пароль на сервер
При успешной авторизации сервер проверяет логин/пароль и присылает User_bll user со всеми полями
для установки юзера(пока не деалем апдейт юзера, пусть панель будет, но это реализуем в последнюю очередь)

4-Получить все заказы данного юзера. Set_all_orders Запрос содержит id_user и по нему сервер формирует
List<Order_bll>all_orders и отправляет клиенту для установки всех заказов на клиенте DataGrid

5-Юзер делает заказ
Для этого он в корзину(List<Dish_bll> user_box) добавляет блюда из List<Dish_bll> all_dishes
5.1-При нажатии на кнопку "Заказать" Формируется заказ Order_bll order и запрос на сервер Insert_order, 
который содержит в себе order . 
5.2-Чтобы заказ появился у юзера в заказах повторяем пункт 4-обновляем все заказы клиента. isPaid должно быть "Не оплачено"

6-Оплата 
При выборе заказа в DataGrid жмем на кнопку оплатить. Запрос на обновление заказа по Id изменянем isPaid на "Оплачен" и отправляем 
на сервер запрос, содержащий только Id_order
если станем заморачиваться с чеками, тогда нужно еще будет по id_order добавить чек в базу данных


Админ(Таня и Константин)

1-При первой загрузке приложения Нужно зарегистрироваться/авторизоваться
1.1-Регистрация. Формируем Admin_Cafe_bll admin и отправляем на сервер, в случае удачи, получаем admin обратно для установки
1.2-Авторизация. Отправляем только логин/пароль, получаем админа обратно для установки полей

2-Получаем всех юзеров List<User_bll> users

4-Получаем все заказы List<Order_bll> orders
Мне нужно будет использовать свой класс для отображения заказов, котороый будет состоять из этих 2-х классов//надо сделать нормальный класс!

5-При выполнении заказа отпраляем запрос содержащий Id заказа и устанавливаем его isActual=0

6-Добавление нового блюда. Формирую Dish_bll new_dish и отправляю запрос на вставку блюда(пока делаем без апдейт блюд)

7-Запрос всех блюд List<Dish_bll> all_dishes(запрос как и у Сандея п.2)

Сервер(Виталий) все запросы к сарверу и получение ответов для клиента и админа

Запросы к базе данных(Таня)

User_SQL
1-Получить всех
2-Вставить юзера
3-Получить юзера по id
3-Можно сделать вернуть юзера по логину(а можно получить всех, а потом в bll найти по логину)
4-апдейт по желанию

Order_SQL
1-получить всех
2-вставить заказ
3-апдейт нужен! 
4-получить все заказы по Id_user

Dish_SQL
1-получить всех
2-вставить 
4-апдейт по желанию

Admin_SQL
2-вставить админа - это первый запрос вообще в системе заказов
1-получить админа (он у нас пока один, поэтому получаем его любым способом)
3-апдейт по желанию

Cheque_SQL
если останется время
1-получить все
2-получить по id заказа